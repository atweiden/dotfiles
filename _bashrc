# -----------------------------------------------------------------------------
# ~/.bashrc
# -----------------------------------------------------------------------------


# -----------------------------------------------------------------------------
# Setup

# if not running interactively, do nothing
[[ $- != *i* ]] && return

# term
if [ "x$DISPLAY" != "x" ]; then
  export HAS_256_COLORS=yes
  alias tmux="tmux -2"
  if [ "$TERM" = "xterm" ]; then
    export TERM=xterm-256color
  fi
else
  if [ "$TERM" == "xterm" ] || [ "$TERM" == "xterm-256color" ]; then
    export HAS_256_COLORS=yes
    alias tmux="tmux -2"
  fi
fi

if [ "$TERM" = "screen" ] && [ "$HAS_256_COLORS" = "yes" ]; then
  export TERM=screen-256color
fi

# editor
export EDITOR=vim
export FCEDIT=vim
export VISUAL=vim

# man pages
if [[ -x /usr/bin/vimpager ]]; then
  export PAGER=vimpager
  export MANPAGER=vimpager
else
  export MANPAGER="less -X"
fi

# mode
set -o vi

# prompt
export PROMPT_COMMAND="history -a;history -c;history -r"
PS1="\[\e[01;31m\]┌─[\[\e[01;35m\u\e[01;31m\]]──[\[\e[00;37m\]${HOSTNAME%%.*}\[\e[01;32m\]]:\w$\[\e[01;31m\]\n\[\e[01;31m\]└──\[\e[01;36m\]>>\[\e[0m\]"

# overwrite
#set -o noclobber


# -----------------------------------------------------------------------------
# Path

# default
export PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin
# dotfiles
PATH=$HOME/.bin:$PATH
# go
PATH=/usr/lib/go/site/bin:$PATH
# haskell
PATH=$HOME/.cabal/bin:$PATH
# nimrod
PATH=$HOME/.babel/bin:$PATH
# perl
PATH=/usr/bin/vendor_perl:/usr/bin/core_perl:/usr/bin/site_perl:$PATH
# python
PATH=$HOME/.virtualenvs:$PATH
# ruby
PATH=$HOME/.rbenv/bin:$HOME/.rbenv/shim:$PATH
if [[ -x /usr/bin/ruby ]]; then
  PATH=$(gem env gempath | awk -F: '{print $2}')/bin:$PATH
  PATH=$(ruby -rubygems -e "puts Gem.user_dir")/bin:$PATH
  export GEM_HOME=$(ruby -rubygems -e "puts Gem.user_dir")
fi


# -----------------------------------------------------------------------------
# History

# don't put duplicate lines in the history. See bash(1) for more
# options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
HISTCONTROL=$HISTCONTROL${HISTCONTROL+:}ignoredups
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoreboth
# append to the history file, don't overwrite it
shopt -s histappend
# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
export HISTIGNORE="ls:cd:cd -:pwd:exit:date:* --help"


# -----------------------------------------------------------------------------
# UX

# check the window size after each command and, if necessary, update
# the values of LINES and COLUMNS
shopt -s checkwinsize

# autocorrect typos in path names when using `cd`
shopt -s cdspell

# add tab completion for SSH hostnames based on ~/.ssh/config, ignoring
# wildcards
[[ -e "$HOME/.ssh/config" ]] && complete -o "default" -o "nospace" -W "$(grep "^Host" ~/.ssh/config | grep -v "[?*]" | cut -d " " -f2)" scp sftp ssh


# -----------------------------------------------------------------------------
# Aliases

alias ls='ls -F --color=auto --group-directories-first'
alias l='ls -1F --color=auto --group-directories-first'
alias la='ls -aF --color=auto'
alias ll='ls -laihF --color=auto'
alias lld='getdirs'
alias llda='getadirs'
alias lldao='getadirso'
alias lsd='ls -ltrF --color=auto | grep --color=never ^d'
alias lx='command ls -lAXB --color=auto' # sort by extension
alias lk='command ls -lASr --color=auto' # sort by size
alias lc='command ls -lAcr --color=auto' # sort by change time
alias lu='command ls -lAur --color=auto' # sort by access time
alias lt='command ls -lAtr --color=auto' # sort by date
[[ -x /usr/bin/tree ]] && alias tree='tree -C'
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'
alias du='du -h --max-depth=1'
alias dusort='du -x --block-size=1048576 | sort -nr'
alias df='df -h'
alias cdd='cd $HOME/Downloads'
alias cdg='cd $(git rev-parse --show-cdup)'
alias cdp='cd $HOME/Projects'
alias cds='cd $HOME/.src'
[[ "$DISPLAY" == "" ]] && alias vim='vim -X' # if not in X, tell vim not to attempt connection w/ X server
[[ -x /usr/bin/vim ]] && alias view='vim -R'
[[ -x /usr/bin/vim ]] && alias vime='vim -u ~/.vimencrypt -x'
[[ -x /usr/bin/vim ]] && alias viml='vim -u ~/.vimrc.lite'
[[ -x /usr/bin/vim ]] && alias vimmin='vim -u NONE -U NONE --cmd "set nocompatible | syntax on | filetype plugin indent on"'
[[ -x /usr/bin/gvim ]] && alias gview='gvim -R'
[[ -x /usr/bin/gvim ]] && alias gvime='gvim -u ~/.vimencrypt -x'
[[ -x /usr/bin/gvim ]] && alias gviml='gvim -u ~/.vimrc.lite'
[[ -x /usr/bin/gvim ]] && alias gvimmin='gvim -u NONE -U NONE --cmd "set nocompatible | syntax on | filetype plugin indent on"'
[[ -x /usr/bin/zip ]] && alias zip='zip -9'
alias gzip='gzip -9'
alias bzip2='bzip2 -9'
alias grep='grep --ignore-case --color=auto'
alias fgrep='fgrep --ignore-case --color=auto'
alias egrep='egrep --ignore-case --color=auto'
[[ -x /usr/bin/fzf ]] && alias fzf='fzf --multi --no-sort --sort 10000'
[[ -x /usr/bin/locate ]] && alias locate='locate --ignore-case'
[[ -x /usr/bin/colordiff ]] && alias diff='colordiff'
alias ..='cd ..'
alias ..2='cd ../..'
alias ..3='cd ../../..'
alias ..4='cd ../../../..'
alias ..5='cd ../../../../..'
[[ -x /usr/bin/pcmanfm ]] && alias :o='pcmanfm "$PWD" &'
alias :e='"$EDITOR"'
alias :q='exit'
[[ -x /usr/bin/subgit ]] && alias sg='subgit'
[[ -x /usr/bin/subhg ]] && alias shg='subhg'
alias h?='history | grep "$@" -i --color=auto'
alias p?='ps auxf | grep -v grep | grep "$@" -i --color=auto'
free='free -m'
[[ -x /usr/bin/ptipython2 ]] && alias ptipython2='ptipython2 --vi'
[[ -x /usr/bin/ptipython ]] && alias ptipython='ptipython --vi'
[[ -x /usr/bin/ptpython2 ]] && alias ptpython2='ptpython2 --vi'
[[ -x /usr/bin/ptpython ]] && alias ptpython='ptpython --vi'
[[ -x /usr/bin/google-chrome ]] && alias google-chrome='google-chrome --enable-webgl --ignore-gpu-blacklist'


# -----------------------------------------------------------------------------
# Functions

for _fn in `find ~/.functions.d -type f -name "*.sh"`; do . ${_fn}; done


# -----------------------------------------------------------------------------
# Host-specific config

[[ -f ~/.bashrc.$HOSTNAME ]] && . ~/.bashrc.$HOSTNAME


# -----------------------------------------------------------------------------
# Archinfo

if [[ -x $HOME/.bin/archinfo && -x /usr/bin/python2 ]]; then
  if ! [[ "$UID" == '0' ]]; then archinfo; else archinfo -c red; fi
fi


# -----------------------------------------------------------------------------
# fzf

# Setting ag as the default source for fzf
export FZF_DEFAULT_COMMAND='ag -l -g ""'
# Getting key bindings
[[ -e "/etc/profile.d/fzf.sh" ]] && . /etc/profile.d/fzf.sh
