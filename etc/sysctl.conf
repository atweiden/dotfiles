# Configuration file for runtime kernel parameters.
# See sysctl.conf(5) for more information.

# Have the CD-ROM close when you use it, and open when you are done.
#dev.cdrom.autoclose = 1
#dev.cdrom.autoeject = 1

# Protection from the SYN flood attack.
net.ipv4.tcp_syncookies = 1

# See evil packets in your logs.
net.ipv4.conf.all.log_martians = 1

# Enables source route verification (RFC1812)
net.ipv4.conf.default.rp_filter = 1

# Enable reverse path
net.ipv4.conf.all.rp_filter = 1

# Never accept redirects or source routes (these are only useful for
# routers).
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.accept_source_route = 0
net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.all.accept_source_route = 0

# Enable timestamps (RFC1323)
#
## Timestamps are used, amongst other things, to protect against wrapping
## sequence numbers. A 1 gigabit link might conceivably re-encounter a
## previous sequence number with an out-of-line value, because it was of
## a previous generation. The timestamp will let it recognize this
## 'ancient packet'.
#
net.ipv4.tcp_timestamps = 1

# Use Selective ACK which can be used to signify that specific packets
# are missing - therefore helping fast recovery
net.ipv4.tcp_sack = 1

# Allows TCP to send duplicate SACKs
net.ipv4.tcp_dsack = 1

# Enable FACK congestion avoidance and fast re-transmission
net.ipv4.tcp_fack = 1

# Enable a fix for 'time-wait assassination hazards in tcp', described
# in RFC 1337. Causes the kernel to drop RST packets for sockets in the
# time-wait state
net.ipv4.tcp_rfc1337 = 1

# Enable window scaling as defined in RFC1323
net.ipv4.tcp_window_scaling = 1

# Disable packet forwarding. Enable for openvpn.
net.ipv4.ip_forward = 1
net.ipv6.conf.default.forwarding = 1
net.ipv6.conf.all.forwarding = 1

# Ignore ICMP broadcasts
net.ipv4.icmp_echo_ignore_broadcasts = 1

# Drop ping packets
net.ipv4.icmp_echo_ignore_all = 1

# Protect against bad error messages
net.ipv4.icmp_ignore_bogus_error_responses = 1

# Tune IPv6
net.ipv6.conf.default.router_solicitations = 0
net.ipv6.conf.default.accept_ra_rtr_pref = 0
net.ipv6.conf.default.accept_ra_pinfo = 0
net.ipv6.conf.default.accept_ra_defrtr = 0
net.ipv6.conf.default.autoconf = 0
net.ipv6.conf.default.dad_transmits = 0
net.ipv6.conf.default.max_addresses = 1

# Enable IPv6 Privacy Extensions (see RFC4941 and RFC3041)
net.ipv6.conf.default.use_tempaddr = 2
net.ipv6.conf.all.use_tempaddr = 2
# You should also add it explicitly per interface:
net.ipv6.conf.eth0.use_tempaddr = 2

# Force IPv6 off
#net.ipv6.conf.all.disable_ipv6 = 1
#net.ipv6.conf.default.disable_ipv6 = 1
#net.ipv6.conf.lo.disable_ipv6 = 1
#net.ipv6.conf.eth0.disable_ipv6 = 1

# Increase the open file limit
#fs.file-max = 65535

# Allow for more PIDs (to reduce rollover problems);
# may break some programs 32768
#kernel.pid_max = 65536

# Allow for fast recycling of TIME_WAIT sockets. Default value is 0
# (disabled). Known to cause some issues with hoststated (load balancing
# and fail over) if enabled, should be used with caution.
net.ipv4.tcp_tw_recycle = 1
# Allow for reusing sockets in TIME_WAIT state for new connections when
# it's safe from protocol viewpoint. Default value is 0 (disabled).
# Generally a safer alternative to tcp_tw_recycle.
net.ipv4.tcp_tw_reuse = 1

# Increase TCP max buffer size setable using setsockopt()
#net.ipv4.tcp_rmem = 4096 87380 8388608
#net.ipv4.tcp_wmem = 4096 87380 8388608

# Increase Linux auto tuning TCP buffer limits
# min, default, and max number of bytes to use
# set max to at least 4MB, or higher if you use very high BDP paths
#net.core.rmem_max = 8388608
#net.core.wmem_max = 8388608
#net.core.netdev_max_backlog = 5000
#net.ipv4.tcp_window_scaling = 1

# Tweak the port range used for outgoing connections.
net.ipv4.ip_local_port_range = 2000 65535

# Tweak those values to alter disk syncing and swap behavior.
#vm.vfs_cache_pressure = 100
#vm.laptop_mode = 0
#vm.swappiness = 60

# Tweak how the flow of kernel messages is throttled.
#kernel.printk_ratelimit_burst = 10
#kernel.printk_ratelimit = 5

# Reboot 600 seconds after kernel panic or oops.
#kernel.panic_on_oops = 1
#kernel.panic = 600

# Disable SysRq key to avoid console security issues.
kernel.sysrq = 0
