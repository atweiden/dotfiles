global !p
from snippets import *
endglobal

snippet #! "shebang line" b!
#!/usr/bin/env ${1:`!p snip.rv = snip.ft`}
$0
endsnippet

snippet echo "debug variables" b!
printf "$2`!p snip.rv = echo(t, '%s', ' ')`" $1
endsnippet

snippet main "main" b!
usage() {
	echo "${1:does some neat stuff}" >&2
	echo "usage: $(basename "\$0")"
	exit \${1:-0}
}

unset OPTIND
while getopts ":h$2" option; do
	case $option in$3
		h) usage 0 ;;
		*) usage 1 ;;
	esac
done && shift $(($OPTIND - 1))
$0
endsnippet

snippet f "function" b!
${1:name}() {
	${0:${VISUAL}}
}
endsnippet

snippet $ "${variable}" i!
$${1:{}$2`!p snip.rv = pair(t[1])`
endsnippet

snippet [[ "[[ condition ]]" w!
[[ ${1:condition} ]]
endsnippet

snippet (( "(( condition ))" w!
(( ${1:condition} ))
endsnippet

snippet if "if [[ condition ]]; then ... fi" b!
if [[ ${1:condition} ]]; then
	${0:${VISUAL}}
fi
endsnippet

snippet elif "elif [[ condition ]]; then ..." b!
elif [[ ${1:condition} ]]; then
	${0:${VISUAL}}
endsnippet

snippet else "else ..." b!
else
	${0:${VISUAL}}
endsnippet

snippet for "for (( init; condition; incr )); do ... done" b!
for (( ${2:i}=0; $2<${1:count}; $2++ )); do
	${0:${VISUAL}}
done
endsnippet

snippet each "for item in array; do ... done" b!
for ${1:item} in ${2:"$@"}; do
	${0:${VISUAL}}
done
endsnippet

snippet while "while [[ condition ]]; do ... done" b!
while [[ ${1:condition} ]]; do
	${0:${VISUAL}}
done
endsnippet

snippet until "until [[ condition ]]; do ... done" b!
until [[ ${1:condition} ]]; do
	${0:${VISUAL}}
done
endsnippet

snippet case "case variable in ... esac" b!
case ${1:word} in
	${0:${VISUAL}}
esac
endsnippet

snippet trap "trap" b!
trap ${1:cleanup} INT TERM EXIT
endsnippet
